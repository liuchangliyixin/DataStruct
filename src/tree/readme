不平衡二叉树
	去除顶端优势
	解决方案：红黑树
		红黑树，Red-Black Tree 「RBT」是一个自平衡(不是绝对的平衡)的二叉查找树(BST)，树上的每个节点都遵循下面的规则:
		·  性质1：每个节点要么是黑色，要么是红色。
		·  性质2：根节点是黑色。
		·  性质3：每个叶子节点（NIL）是黑色。
		·  性质4：每个红色结点的两个子结点一定都是黑色。
		·  性质5：任意一结点到每个叶子结点的路径都包含数量相同的黑结点。(可以视作黑平衡二叉树)

		红黑树能自平衡的三种操作：左旋、右旋和变色

		·  左旋：以某个结点作为支点(旋转结点)，其右子结点变为旋转结点的父结点，右子结点的左子结点变为旋转结点的右子结点，左子结点保持不变。
		·  右旋：以某个结点作为支点(旋转结点)，其左子结点变为旋转结点的父结点，左子结点的右子结点变为旋转结点的左子结点，右子结点保持不变。
		·  变色：结点的颜色由红变黑或由黑变红。

		红黑树的插入场景：
			红黑树为空：
				插入节点作为根节点，并设置为黑色

			插入节点的父节点为黑色节点：
				直接插入

			插入节点的父节点为红色节点：

				叔叔节点存在且为红色的节点：
					将父节点和叔叔节点设置为黑色
					将祖父节点设置为红色
					将祖父节点作为当前插入节点再套一次规则

				叔叔节点不存在或为黑色节点：

					父节点是祖父节点的左子节点：

						插入节点是父节点的左子节点：
							将父节点设置为黑色
							将祖父节点设置为红色
							对祖父节点进行右旋

						插入节点是父节点的右子节点：
							对父节点进行左旋
							把父节点设置为插入节点，得到上面的情景
							再来一次右旋

					父节点是祖父节点的右子节点：

						插入节点是父节点的右子节点：
							将父节点设置为黑色
							将祖父节点设置为红色
							对祖父节点进行左旋

						插入节点是父节点的左子节点：
                            对父节点进行右旋
                            把父节点设置为插入节点，得到上面的情景
                            再来一次左旋

		红黑树练习网站: http://algoanim.ide.sk/index.php?page=showanim&id=63